package code

/* This file is automatically generated */

type ErrType byte

const (
	ErrInvalidMessageReceived           ErrType = 0x05
	ErrBootloaderFailedToExecuteCommand ErrType = 0x06
	ErrReceivedMessageHasInvalidCRC     ErrType = 0x07

	ErrBootloaderFailedToWriteToFlash  ErrType = 0x08
	ErrBootloaderFailedToReadFromFlash ErrType = 0x09
	ErrInvalidLengthForFlashRead       ErrType = 0x0a
	ErrMalformedCompressedDataReceived ErrType = 0x0b

	ErrBadDataLength   ErrType = 0xc0
	ErrBadDataChecksum ErrType = 0xc1
	ErrBadBlockSize    ErrType = 0xc2
	ErrInvalidCommand  ErrType = 0xc3

	ErrSPIOperationFailed ErrType = 0xc4
	ErrSPIUnlockFailed    ErrType = 0xc5

	ErrErrorWhenUncompressingTheData ErrType = 0xc7
	ErrDidntReceiveEnoughData        ErrType = 0xc8
	ErrReceivedTooMuchData           ErrType = 0xc9
	ErrOther                         ErrType = 0xff
)

const (
	ErrTextInvalidMessageReceived           = "Invalid message received"
	ErrTextBootloaderFailedToExecuteCommand = "Bootloader failed to execute command"
	ErrTextReceivedMessageHasInvalidCRC     = "Received message has invalid CRC"

	ErrTextBootloaderFailedToWriteToFlash  = "Bootloader failed to write to flash"
	ErrTextBootloaderFailedToReadFromFlash = "Bootloader failed to read from flash"
	ErrTextInvalidLengthForFlashRead       = "Invalid length for flash read"
	ErrTextMalformedCompressedDataReceived = "Malformed compressed data received"

	ErrTextBadDataLength   = "Bad data length"
	ErrTextBadDataChecksum = "Bad data checksum"
	ErrTextBadBlockSize    = "Bad block size"
	ErrTextInvalidCommand  = "Invalid command"

	ErrTextSPIOperationFailed = "SPI operation failed"
	ErrTextSPIUnlockFailed    = "SPI unlock failed"

	ErrTextErrorWhenUncompressingTheData = "Error when uncompressing the data"
	ErrTextDidntReceiveEnoughData        = "Didn't receive enough data"
	ErrTextReceivedTooMuchData           = "Received too much data"
	ErrTextOther                         = "Other"
)

var ErrMap = map[ErrType]string{
	ErrInvalidMessageReceived:           ErrTextInvalidMessageReceived,
	ErrBootloaderFailedToExecuteCommand: ErrTextBootloaderFailedToExecuteCommand,
	ErrReceivedMessageHasInvalidCRC:     ErrTextReceivedMessageHasInvalidCRC,
	ErrBootloaderFailedToWriteToFlash:   ErrTextBootloaderFailedToWriteToFlash,
	ErrBootloaderFailedToReadFromFlash:  ErrTextBootloaderFailedToReadFromFlash,
	ErrInvalidLengthForFlashRead:        ErrTextInvalidLengthForFlashRead,
	ErrMalformedCompressedDataReceived:  ErrTextMalformedCompressedDataReceived,
	ErrBadDataLength:                    ErrTextBadDataLength,
	ErrBadDataChecksum:                  ErrTextBadDataChecksum,
	ErrBadBlockSize:                     ErrTextBadBlockSize,
	ErrInvalidCommand:                   ErrTextInvalidCommand,
	ErrSPIOperationFailed:               ErrTextSPIOperationFailed,
	ErrSPIUnlockFailed:                  ErrTextSPIUnlockFailed,
	ErrErrorWhenUncompressingTheData:    ErrTextErrorWhenUncompressingTheData,
	ErrDidntReceiveEnoughData:           ErrTextDidntReceiveEnoughData,
	ErrReceivedTooMuchData:              ErrTextReceivedTooMuchData,
	ErrOther:                            ErrTextOther,
}

func (obj ErrType) String() string {
	val, ok := ErrMap[obj]
	if ok {
		return val
	}
	return "Unknown ErrType"
}

func ErrorDetect(b byte) ErrType {
	_, ok := ErrMap[ErrType(b)]
	if ok {
		return ErrOther
	}
	return ErrType(b)
}
